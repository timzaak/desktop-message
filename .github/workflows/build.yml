name: build
on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: "version-to-build, it does nothing now"
jobs:
  Unix:
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        settings:
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: make release-linux
          - host: macos-12
            target: x86_64-apple-darwin
            build: make release-mac-x86_64
          - host: macos-13-xlarge
            target: aarch64-apple-darwin
            build: make release-mac-aarch64
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Rust
        id: rust_toolchain # Added id for referencing output
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.settings.target }}
          profile: minimal
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.settings.host }}-${{ matrix.settings.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ matrix.settings.host }}-cargo-${{ matrix.settings.target }}
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      - name: Build
        run: ${{ matrix.settings.build }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: tiny-mqtt-lib-${{ matrix.settings.target }}
          path: release/*
          if-no-files-found: error
  Windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          profile: minimal
      - name: Set up cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: windows-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: windows-cargo
      - name: build
        shell: pwsh
        run: ./windows-build.ps1
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: tiny-mqtt-lib-${{ steps.rust_toolchain.outputs.target }}
          path: release/*
          if-no-files-found: error
