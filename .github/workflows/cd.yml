name: cd
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        settings:
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            release: make release-linux
            build: make prepare-linux
            name: linux-x86_64
          - host: macos-latest
            target: x86_64-apple-darwin
            build: make prepare-mac-x86_64
            release: make release-mac-x86_64
            name: darwin-x86_64
          - host: macos-latest
            target: aarch64-apple-darwin
            build: make prepare-mac-aarch64
            release: make release-mac-aarch64
            name: darwin-aarch64
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64
            release: make release-windows
            build: make prepare-windows


    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      - name: install libs
        run: ${{ matrix.settings.build }}
      - name: Build
        run: ${{ matrix.settings.release }}
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: deskmsg-${{ matrix.settings.name }}
          path: release/
  create_release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      - name: Compress Artifacts
        run: |
          mkdir -p compressed_artifacts
          cd release                  
          zip -r ../compressed_artifacts/deskmsg-${{ inputs.version }}-windows-x86_64.zip deskmsg-windows-x86_64/*
          zip -r ../compressed_artifacts/deskmsg-${{ inputs.version }}-linux-x86_64.zip deskmsg-linux-x86_64/*
          zip -r ../compressed_artifacts/deskmsg-${{ inputs.version }}-darwin-x86_64.zip deskmsg-darwin-x86_64/*
          zip -r ../compressed_artifacts/deskmsg-${{ inputs.version }}-darwin-aarch64.zip deskmsg-darwin-aarch64/*

      - name: Create Draft Release and Upload Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build_and_push.outputs.version }}
          name: Release v${{ needs.build_and_push.outputs.version }}
          draft: true
          prerelease: false
          files: |
            compressed_artifacts/**
